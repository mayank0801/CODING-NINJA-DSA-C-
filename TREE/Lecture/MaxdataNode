Given a generic tree, find and return the node with maximum data. You need to return the node which is having maximum data.
Return null if tree is empty.



/************************************************************
 
    Following is the structure for the TreeNode class

    template <typename T>
    class TreeNode {
     public:
        T data;
        vector<TreeNode<T>*> children;
    
        TreeNode(T data) {
            this->data = data;
        }
    
        ~TreeNode() {
            for (int i = 0; i < children.size(); i++) {
                delete children[i];
            }
        }
    };

************************************************************/
TreeNode<int>* maxDataNode(TreeNode<int>* root) {
    // Write your code here
    if(root==NULL)
        return NULL;
    TreeNode<int>*Max=root;
    for(int i=0;i<root->children.size();i++)
    {
        TreeNode<int>*ans=maxDataNode(root->children[i]);
        if(Max->data>ans->data)
          Max=Max;
        else
            Max=ans;
    }
    return Max;
}
