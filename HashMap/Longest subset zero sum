Given an array consisting of positive and negative integers, find the length of the longest subarray whose sum is zero.
Sample Input 1:
10 
 95 -97 -387 -435 -5 -70 897 127 23 284
Sample Output 1:
5
Explanation:
The five elements that form the longest subarray that sum up to zero are: -387, -435, -5, -70, 897 

#include<unordered_map>
int lengthOfLongestSubsetWithZeroSum(int* arr, int n) {
    // Write your code here
    int maxlen=0;
    unordered_map<int,int>ump;
    int sum=0;
    for(int i=0;i<n;i++)
    {
		sum+=arr[i];
        if(sum==0)
        {
            maxlen=i+1;
        }
        else
        {
            if(ump.find(sum)!=ump.end())
            {
                maxlen=max(maxlen,(i-ump[sum]));
            }
            else
                ump[sum]=i;
        }
    }
    return maxlen;

}
