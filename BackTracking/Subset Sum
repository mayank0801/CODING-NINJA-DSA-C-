You are given an array of integers and a target K. You have to find the count of subsets of the given array that sum up to K




#include<bits/stdc++.h>
using namespace std;

int helper(int *arr, int n, int k, int &sum)
{
    if(n == 0)
    {
        if(sum == k)
        {
            return 1;
        }
        else if(sum > k || sum < k)
        {
            return 0;
        }
    }
    
    // pick
    sum += arr[0];
    int a = helper(arr + 1, n - 1, k, sum);
    
    // backtracking:
    sum -= arr[0];
    
    // not pick
    int b = helper(arr + 1, n - 1, k, sum);
    
    return a + b;
}

int subsetSum(int *arr,int n,int k)
{
    int sum = 0;
    int ans = helper(arr, n, k, sum);
    return ans;
}
int main(){
    
    // write your code here
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        int k;
        cin>>n>>k;
        int arr[n];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
    	cout<<subsetSum(arr,n,k)<<endl;
    }
    
    
    return 0;
}
